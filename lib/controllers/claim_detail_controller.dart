import 'dart:developer';
import 'package:get/get.dart';
import 'package:gcargo/models/orders/ordersPageNew.dart';
import 'package:gcargo/services/parcelService.dart';

class ClaimDetailController extends GetxController {
  // Observable variables
  var isLoading = false.obs;
  var orderDetail = Rxn<OrdersPageNew>();
  var errorMessage = ''.obs;
  var hasError = false.obs;
  var deliveryOrderId = 0.obs;

  @override
  void onInit() {
    super.onInit();
    log('üöÄ ClaimDetailController onInit called');
  }

  Future<void> getDeliveryOrderById(int id) async {
    if (id <= 0) return;

    try {
      isLoading.value = true;
      hasError.value = false;
      errorMessage.value = '';
      deliveryOrderId.value = id;

      final data = await ParcelService.getIDeliveryOrderById(id: id);

      if (data != null) {
        orderDetail.value = data;
      } else {
        _setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå');
      }
    } catch (e) {
      log('‚ùå Error in getDeliveryOrderById: $e');
      _setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    } finally {
      isLoading.value = false;
    }
  }

  void _setError(String message) {
    hasError.value = true;
    errorMessage.value = message;
    orderDetail.value = null;
  }

  // Method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö refresh ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  Future<void> refreshData() async {
    if (deliveryOrderId.value > 0) {
      await getDeliveryOrderById(deliveryOrderId.value);
    }
  }

  // Helper methods ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å orderDetail
  String get orderCode => orderDetail.value?.code ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå';
  String get poNumber => orderDetail.value?.po_no ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ PO';
  String get orderDate => orderDetail.value?.date ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà';
  String get driverName => orderDetail.value?.driver_name ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö';
  String get driverPhone => orderDetail.value?.driver_phone ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£';
  String get memberName =>
      orderDetail.value?.member != null
          ? '${orderDetail.value!.member!.fname ?? ''} ${orderDetail.value!.member!.lname ?? ''}'.trim()
          : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å';
  String get memberPhone => orderDetail.value?.member?.phone ?? '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£';
  String get status => orderDetail.value?.status ?? '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
  String get note => orderDetail.value?.note ?? '-';

  // Helper method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á status ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
  String getStatusText(String? status) {
    switch (status) {
      case 'arrived_china_warehouse':
        return '‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡∏à‡∏µ‡∏ô';
      case 'in_transit':
        return '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏ô‡∏™‡πà‡∏á';
      case 'arrived_thailand_warehouse':
        return '‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡πÑ‡∏ó‡∏¢';
      case 'awaiting_payment':
        return '‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô';
      case 'delivered':
        return '‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß';
      default:
        return status ?? '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
    }
  }

  // Helper method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏µ‡∏Ç‡∏≠‡∏á status
  String getStatusColor(String? status) {
    switch (status) {
      case 'arrived_china_warehouse':
        return 'blue';
      case 'in_transit':
        return 'orange';
      case 'arrived_thailand_warehouse':
        return 'green';
      case 'awaiting_payment':
        return 'red';
      case 'delivered':
        return 'green';
      default:
        return 'grey';
    }
  }

  // Helper methods ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
  double get totalPrice => orderDetail.value?.order?.total_price != null ? double.tryParse(orderDetail.value!.order!.total_price!) ?? 0.0 : 0.0;

  double get depositFee => orderDetail.value?.order?.deposit_fee != null ? double.tryParse(orderDetail.value!.order!.deposit_fee!) ?? 0.0 : 0.0;

  double get chinaShippingFee =>
      orderDetail.value?.order?.china_shipping_fee != null ? double.tryParse(orderDetail.value!.order!.china_shipping_fee!) ?? 0.0 : 0.0;

  double get exchangeRate => orderDetail.value?.order?.exchange_rate != null ? double.tryParse(orderDetail.value!.order!.exchange_rate!) ?? 0.0 : 0.0;

  String get orderNote => orderDetail.value?.order?.note ?? '-';
  String get paymentTerm => orderDetail.value?.order?.payment_term ?? '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
  String get shippingType => orderDetail.value?.order?.shipping_type ?? '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

  // Helper method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
  List<dynamic> get orderLists => orderDetail.value?.order?.order_lists ?? [];
}
