import 'package:flutter/material.dart';

class DocumentDetailPage extends StatefulWidget {
  const DocumentDetailPage({super.key});

  @override
  State<DocumentDetailPage> createState() => _DocumentDetailPageState();
}

class _DocumentDetailPageState extends State<DocumentDetailPage> with SingleTickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 2, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        elevation: 0,
        backgroundColor: Colors.white,
        automaticallyImplyLeading: false,
        leading: IconButton(icon: const Icon(Icons.arrow_back_ios_new, color: Colors.black), onPressed: () => Navigator.pop(context)),
        title: const Text('‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ X2504290002', style: TextStyle(color: Colors.black, fontSize: 16, fontWeight: FontWeight.w600)),
        bottom: TabBar(
          controller: _tabController,
          labelColor: Colors.black,
          unselectedLabelColor: Colors.grey,
          indicatorColor: const Color(0xFF1E3C72),
          tabs: const [Tab(text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'), Tab(text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô')],
        ),
      ),
      body: TabBarView(controller: _tabController, children: [_buildDocumentInfoTab(), _buildRefundInfoTab()]),
    );
  }

  Widget _buildDocumentInfoTab() {
    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        children: [
          // üî¥ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
          _warningBox(
            '‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏£‡∏ß‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏Å‡∏î‡∏±‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏ó‡∏¢',

            'assets/icons/info-circle.png',
            background: const Color(0xFFFFEEEE),
            iconColor: Colors.red,
          ),

          const SizedBox(height: 12),

          // üü° ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
          _warningBox(
            '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏≤‡∏á‡πÑ‡∏•‡∏ô‡πå‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
            'assets/icons/danger.png',
            background: const Color(0xFFFFF6D9),
            iconColor: Colors.orange,
          ),

          const SizedBox(height: 16),

          // üí∞ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
          _sectionCard(
            children: const [
              _DetailRow(label: '‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏µ‡∏ô‡πÑ‡∏ó‡∏¢', value: '1,060.00‡∏ø'),
              _DetailRow(label: '‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ QC', value: '0‡∏ø'),
              _DetailRow(label: '‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏î‡πÑ‡∏°‡πâ', value: '0‡∏ø'),
              _DetailRow(label: '‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£', value: '50‡∏ø'),
              _DetailRow(label: '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢', value: '0‡∏ø'),
              _DetailRow(label: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î', value: '0‡∏ø'),
              Divider(height: 24),
              _DetailRow(label: '‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô', value: '1,110.00‡∏ø', bold: true),
              _DetailRow(label: '‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', value: 'QR ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå'),
              _DetailRow(label: '‡∏´‡∏±‡∏Å‡∏†‡∏≤‡∏©‡∏µ ‡∏ì ‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢ 1%', value: '', showCheck: true),
            ],
          ),

          const SizedBox(height: 16),

          // üî¢ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á
          _sectionCard(
            title: '‡πÄ‡∏•‡∏Ç‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏µ‡∏ô',
            children: [
              _shippingRow('00035', '660.00‡∏ø'),
              _shippingRow('00034', '100.00‡∏ø'),
              _shippingRow('00033', '100.00‡∏ø'),
              _shippingRow('00032', '100.00‡∏ø'),
              _shippingRow('00031', '100.00‡∏ø'),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildRefundInfoTab() {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: const [
          _DetailRow(label: '‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ', value: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£'),
          _DetailRow(label: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô', value: '01/07/2025'),
          _DetailRow(label: '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô', value: '1,110.00‡∏ø'),
          SizedBox(height: 16),
          Text('‡πÑ‡∏ü‡∏•‡πå', style: TextStyle(fontWeight: FontWeight.w600)),
          SizedBox(height: 8),
          Image(image: AssetImage('assets/images/image101.png'), width: 120),
        ],
      ),
    );
  }

  Widget _warningBox(String text, String iconPath, {required Color background, required Color iconColor}) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(12),
      decoration: BoxDecoration(color: background, borderRadius: BorderRadius.circular(8)),
      child: Row(
        children: [
          Image.asset(iconPath, width: 18, color: iconColor),
          const SizedBox(width: 8),
          Expanded(child: Text(text, style: const TextStyle(fontSize: 13))),
        ],
      ),
    );
  }

  Widget _sectionCard({String? title, required List<Widget> children}) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(border: Border.all(color: const Color(0xFFE0E0E0)), borderRadius: BorderRadius.circular(12)),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          if (title != null) ...[Text(title, style: const TextStyle(fontWeight: FontWeight.w600)), const SizedBox(height: 12)],
          ...children,
        ],
      ),
    );
  }

  Widget _shippingRow(String code, String price) {
    return Column(
      children: [
        Padding(
          padding: const EdgeInsets.symmetric(vertical: 10),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [Text(code, style: const TextStyle(fontSize: 14)), Text(price, style: const TextStyle(fontSize: 14))],
          ),
        ),
        const Divider(height: 1),
      ],
    );
  }
}

class _DetailRow extends StatelessWidget {
  final String label;
  final String value;
  final bool bold;
  final bool showCheck;

  const _DetailRow({required this.label, required this.value, this.bold = false, this.showCheck = false});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6),
      child: Row(
        children: [
          Expanded(child: Text(label, style: const TextStyle(color: Colors.grey))),
          if (showCheck)
            const Icon(Icons.check_circle, size: 18, color: Colors.green)
          else
            Text(value, style: TextStyle(fontWeight: bold ? FontWeight.bold : FontWeight.w500)),
        ],
      ),
    );
  }
}
