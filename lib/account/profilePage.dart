import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:gcargo/constants.dart';
import 'package:gcargo/widgets/CustomTextFormField.dart';
import 'package:gcargo/widgets/DatePickerTextFormField.dart';

class ProfilePage extends StatefulWidget {
  const ProfilePage({super.key});

  @override
  State<ProfilePage> createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final TextEditingController confirmPasswordController = TextEditingController();
  final TextEditingController nameController = TextEditingController();
  final TextEditingController lineIdController = TextEditingController();
  final TextEditingController phoneController = TextEditingController();
  final TextEditingController referCodeController = TextEditingController();
  final TextEditingController agentCodeController = TextEditingController();
  final TextEditingController birthDateController = TextEditingController();

  String gender = 'male';

  @override
  void dispose() {
    emailController.dispose();
    passwordController.dispose();
    confirmPasswordController.dispose();
    nameController.dispose();
    lineIdController.dispose();
    phoneController.dispose();
    referCodeController.dispose();
    agentCodeController.dispose();
    birthDateController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final themeColor = const Color(0xFF002D65);

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text('‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå', style: TextStyle(color: Colors.black)),
        backgroundColor: Colors.white,
        elevation: 0.5,
        leading: IconButton(icon: const Icon(Icons.arrow_back, color: Colors.black), onPressed: () => Navigator.pop(context)),
      ),
      body: SafeArea(
        child: SingleChildScrollView(
          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              // üîπ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
              Column(
                children: [
                  ClipOval(child: Image.asset('assets/images/Avatar.png', width: 100, height: 100, fit: BoxFit.cover)),
                  const SizedBox(height: 8),
                  TextButton(onPressed: () {}, child: const Text('‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û', style: TextStyle(color: Colors.blue))),
                ],
              ),
              const SizedBox(height: 16),

              // üîπ ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              CustomTextFormField(label: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', hintText: 'Gcargo@gmail.com', controller: emailController),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô', hintText: '‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô', controller: passwordController, isPassword: true),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô', hintText: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô', controller: confirmPasswordController, isPassword: true),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', hintText: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', controller: nameController),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡πÑ‡∏≠‡∏î‡∏µ‡πÑ‡∏•‡∏ô‡πå', hintText: '090-999-9599', controller: lineIdController),
              const SizedBox(height: 14),

              // üîπ ‡πÄ‡∏û‡∏®
              Row(
                children: [
                  const Text('‡πÄ‡∏û‡∏®', style: TextStyle(fontSize: 16)),
                  const SizedBox(width: 20),
                  Row(
                    children: [
                      Radio<String>(value: 'female', groupValue: gender, onChanged: (value) => setState(() => gender = value!)),
                      const Text('‡∏´‡∏ç‡∏¥‡∏á'),
                    ],
                  ),
                  Row(
                    children: [
                      Radio<String>(value: 'male', groupValue: gender, onChanged: (value) => setState(() => gender = value!)),
                      const Text('‡∏ä‡∏≤‡∏¢'),
                    ],
                  ),
                ],
              ),
              const SizedBox(height: 14),

              // üîπ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î
              DatePickerTextFormField(label: '‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏õ‡∏µ‡πÄ‡∏Å‡∏¥‡∏î', controller: birthDateController, hintText: ''),
              const SizedBox(height: 14),

              CustomTextFormField(label: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠', hintText: '090-999-9599', controller: phoneController),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥', hintText: '-', controller: referCodeController),
              const SizedBox(height: 14),
              CustomTextFormField(label: '‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå', hintText: '-', controller: agentCodeController),
              const SizedBox(height: 24),

              // üîπ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: themeColor,
                    padding: const EdgeInsets.symmetric(vertical: 16),
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
                  ),
                  onPressed: () {},
                  child: const Text('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô', style: TextStyle(fontSize: 16, color: Colors.white)),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
